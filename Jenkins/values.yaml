clusterZone: "cluster.local"
renderHelmLabels: true
controller:
  componentName: "jenkins-controller"
  image: "jenkins/jenkins"
  tag: "2.263.4"
  imagePullPolicy: "Always"
  disableRememberMe: false
  numExecutors: 0
  executorMode: "NORMAL"
  markupFormatter: plainText
  adminSecret: true
  hostNetworking: false
  useSecurity: true
  adminUser: admin
  adminPassword: "@wesome!1"
  numExecutors: 0
  admin:
    existingSecret: ""
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password
  jenkinsHome: "/var/jenkins_home"
  jenkinsRef: "/usr/share/jenkins/ref"
  jenkinsWar: "/usr/share/jenkins/jenkins.war"
  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "2000m"
      memory: "4096Mi"
  usePodSecurityContext: true
  runAsUser: 1000
  fsGroup: 1000
  serviceType: ClusterIP

  healthProbes: false
  probes:
    startupProbe:
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 12
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
      # If Startup Probe is not supported on your Kubernetes cluster, you might want to use "initialDelaySeconds" instead.
      # It delays the initial liveness probe while Jenkins is starting
      # initialDelaySeconds: 60
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
      # If Startup Probe is not supported on your Kubernetes cluster, you might want to use "initialDelaySeconds" instead.
      # It delays the initial readyness probe while Jenkins is starting
      # initialDelaySeconds: 60
  agentListenerPort: 50000
  agentListenerHostPort:
  agentListenerNodePort:
  disabledAgentProtocols:
    - JNLP-connect
    - JNLP2-connect
  csrf:
    defaultCrumbIssuer:
      enabled: true
      proxyCompatability: true
  agentListenerServiceType: "ClusterIP"
  agentListenerLoadBalancerIP:
  agentListenerServiceAnnotations: {}
  loadBalancerSourceRanges:
  - 0.0.0.0/0
  installPlugins:
    - configuration-as-code:latest
    - kubernetes:latest
    - workflow-aggregator:latest
    - workflow-job:latest
    - credentials-binding:latest
    - git:latest
    - git-client:latest
    - git-server:latest
    - greenballs:latest
    - blueocean:latest
    - strict-crumb-issuer:latest
    - http_request:latest
    - matrix-project:latest
    - jquery:latest
    - artifactory:latest
    - jdk-tool:latest
    - matrix-auth:latest
    - credentials:latest
    - pipeline-utility-steps:latest
    - docker-workflow:latest
    - command-launcher:latest
    - github-branch-source:latest

  overwritePlugins: true
  ingress:
    enabled: true
    hostName: jenkins-devops.southeastasia.cloudapp.azure.com
    annotations:
      kubernetes.io/ingress.class: traefik
persistence:
  enabled: true
  storageClass: ""
  annotations: {}
  accessMode: "ReadWriteOnce"
  size: "10Gi"
  volumes:
  #  - name: nothing
  #    emptyDir: {}
  mounts:
  #  - mountPath: /var/nothing
  #    name: nothing
  #    readOnly: true

rbac:
  create: true
  readSecrets: false

serviceAccount:
  create: true